
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8080;
        server_name  10.1.11.24;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /software/diancan/admin/dist;
            index  index.html index.htm;
        }



        location /images/ {
            alias /software/diancan/img/images/;

        }

        location ~ ^/api/(?<subpath>.*)$ {
            set $args_part "";
            if ($args) {
                set $args_part ?$args;
            }

            # 去除路径中的 /api 部分
            # rewrite ^/api/(.*)$ /$1 break;

            proxy_pass http://10.1.11.24:8081/$subpath$args_part; # 包括查询参数
            proxy_set_header HOST $host;
            proxy_pass_request_body on;
            proxy_pass_request_headers on;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # 添加其他可能需要的代理头配置
            proxy_set_header X-Original-URI $request_uri; # 将原始请求中的URI传递给后端

        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen       80;
        server_name  10.1.11.24;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /software/diancan/user/dist;
            index  index.html index.htm;
        }



        location /images/ {
            alias /software/diancan/img/images/;

        }

        location ~ ^/api/(?<subpath>.*)$ {
            set $args_part "";
            if ($args) {
                set $args_part ?$args;
            }

            # 去除路径中的 /api 部分
            # rewrite ^/api/(.*)$ /$1 break;

            proxy_pass http://10.1.11.24:8081/$subpath$args_part; # 包括查询参数
            proxy_set_header HOST $host;
            proxy_pass_request_body on;
            proxy_pass_request_headers on;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # 添加其他可能需要的代理头配置
            proxy_set_header X-Original-URI $request_uri; # 将原始请求中的URI传递给后端
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen       8083;
        server_name  10.1.11.24;

        location / {
            root   /software/dorm/dist;
            index  index.html index.htm;
            if ($request_filename ~* \.(htm|html)$)
            {
                add_header Cache-Control "no-cache";
            }
        }

    

        location /images/ {
            alias /software/dorm/img/images/;

        }

        location ~ ^/api/(?<subpath>.*)$ {
            set $args_part "";
            if ($args) {
                set $args_part ?$args;
            }

            # 去除路径中的 /api 部分
            # rewrite ^/api/(.*)$ /$1 break;
            
            proxy_pass http://10.1.11.24:8082/$subpath$args_part; # 包括查询参数
            proxy_set_header HOST $host;
            proxy_pass_request_body on;
            proxy_pass_request_headers on;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # 添加其他可能需要的代理头配置
            proxy_set_header X-Original-URI $request_uri; # 将原始请求中的URI传递给后端
        }


        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}